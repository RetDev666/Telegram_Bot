#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ Railway –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
"""

import os
import sys
from config import BOT_TOKEN, IS_RAILWAY, TESSERACT_PATH, DATABASE_URL, PORT

def test_railway_config():
    """–¢–µ—Å—Ç—É—î –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é –¥–ª—è Railway"""
    print("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Railway –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó...")
    print("=" * 50)
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–∏—Ö –∑–º—ñ–Ω–Ω–∏—Ö
    tests = [
        ("BOT_TOKEN", BOT_TOKEN, "–¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞"),
        ("RAILWAY_ENVIRONMENT", os.getenv('RAILWAY_ENVIRONMENT'), "–°–µ—Ä–µ–¥–æ–≤–∏—â–µ Railway"),
        ("TESSERACT_PATH", TESSERACT_PATH, "–®–ª—è—Ö –¥–æ Tesseract"),
        ("DATABASE_URL", DATABASE_URL, "URL –±–∞–∑–∏ –¥–∞–Ω–∏—Ö"),
        ("PORT", PORT, "–ü–æ—Ä—Ç –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞"),
    ]
    
    passed = 0
    failed = 0
    
    for var_name, var_value, description in tests:
        if var_value:
            print(f"‚úÖ {var_name}: {description}")
            if var_name == "BOT_TOKEN":
                print(f"   –¢–æ–∫–µ–Ω: {var_value[:10]}...")
            elif var_name == "DATABASE_URL":
                print(f"   URL: {var_value[:20]}...")
            else:
                print(f"   –ó–Ω–∞—á–µ–Ω–Ω—è: {var_value}")
            passed += 1
        else:
            print(f"‚ùå {var_name}: {description} - –ù–ï –í–°–¢–ê–ù–û–í–õ–ï–ù–û")
            failed += 1
    
    print("\n" + "=" * 50)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {passed} –ø—Ä–æ–π–¥–µ–Ω–æ, {failed} –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∏
    print(f"\nüîß –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {'Railway' if IS_RAILWAY else '–õ–æ–∫–∞–ª—å–Ω–∞'}")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Python –≤–µ—Ä—Å—ñ—ó
    print(f"üêç Python –≤–µ—Ä—Å—ñ—è: {sys.version}")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
    print(f"\nüì¶ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π:")
    try:
        import telegram
        print(f"‚úÖ python-telegram-bot: {telegram.__version__}")
    except ImportError:
        print("‚ùå python-telegram-bot: –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    
    try:
        import cv2
        print(f"‚úÖ opencv-python: {cv2.__version__}")
    except ImportError:
        print("‚ùå opencv-python: –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    
    try:
        import pytesseract
        print("‚úÖ pytesseract: –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    except ImportError:
        print("‚ùå pytesseract: –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    
    try:
        import flask
        print("‚úÖ flask: –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    except ImportError:
        print("‚ùå flask: –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    
    if failed == 0:
        print("\nüéâ –í—Å—ñ —Ç–µ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω–æ! –ì–æ—Ç–æ–≤–æ –¥–æ –¥–µ–ø–ª–æ—é –Ω–∞ Railway.")
        return True
    else:
        print(f"\n‚ö†Ô∏è  –Ñ {failed} –ø—Ä–æ–±–ª–µ–º(–∏). –í–∏–ø—Ä–∞–≤—Ç–µ —ó—Ö –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ—î–º.")
        return False

if __name__ == "__main__":
    success = test_railway_config()
    sys.exit(0 if success else 1) 